steps:
- id: 'build'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - build
  - --rm
  - --no-cache
  - --tag=gcr.io/$PROJECT_ID/rcran-build:temp
  - .

# Pushing the intermediate image can be useful 
# to debug test failures.
- id: 'intermediate-push'
  waitFor: ['build']
  name: 'gcr.io/cloud-builders/docker'
  args:
  - push
  - gcr.io/$PROJECT_ID/rcran-build:temp

- id: 'test'
  waitFor: ['intermediate-push'] # otherwise the test failure should stop push.
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e
    
    # Verify 'convert' (ImageMagick) is available.
    docker run --rm -t --read-only --net=none \
      gcr.io/$PROJECT_ID/rcran-build:temp \
      convert --version

    mkdir -p /tmp/rcran-build/tmp
    mkdir -p /tmp/rcran-build/devshm
    mkdir -p /tmp/rcran-build/working
    docker run --rm -t --read-only --net=none \
      -e HOME=/tmp -v $$PWD:/input:ro \
      -v /tmp/rcran-build/working:/working \
      -w=/working \
      -v /tmp/rcran-build/tmp:/tmp \
      -v /tmp/rcran-build/devshm:/dev/shm \
      gcr.io/$PROJECT_ID/rcran-build:temp \
      /bin/bash -c 'Rscript /input/test_build.R'

    ls -alhR /tmp/rcran-build/working

    # Verify expected test_build.R output is present.
    [ -s /tmp/rcran-build/working/plot1.png ]

    echo "ok"

- id: 'retag'
  waitFor: ['test']
  name: 'gcr.io/cloud-builders/docker'
  args:
  - tag
  - gcr.io/$PROJECT_ID/rcran-build:temp
  - gcr.io/kaggle-images/rcran:$_TAG

images: ['gcr.io/kaggle-images/rcran:$_TAG']

options:
  machineType: 'N1_HIGHCPU_32' # If change, update Ncpus in package_installs.R
  diskSizeGb: 1000 # Max disk size. Gives more IOPS.

timeout: 86400s

substitutions:
  _TAG: testing # Change to latest for production.

tags: ['rcran']